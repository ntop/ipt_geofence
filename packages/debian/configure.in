AC_INIT([Makefile.in], 1.0)

# NOTE: this file is not actually used. You need to edit configure as well!
IPT_GEOFENCE_VERSION_SHORT=`grep IPT_RELEASE ../../config.h | cut -d '"' -f 2`
GIT_COMMITS=`git rev-list --count HEAD`

MACHINE=`uname -m`
SHORT_MACHINE=`uname -m | cut -b1-3`

DEBIAN_VERSION=`cat /etc/debian_version | cut -d '.' -f 1`
UBUNTU_VERSION=`lsb_release -r| cut -d ':' -f 2 | sed 's/\t//g'`

if test $DEBIAN_VERSION = "10" || test $UBUNTU_VERSION == "20.04"; then
 JSONDEP="libjsoncpp1"
else
 JSONDEP="libjsoncpp25"
fi

if test $DEBIAN_VERSION = "13"; then
 JSONDEP="libjsoncpp26"
fi

EXTRA_DEP="libnetfilter-queue1, libmaxminddb0, ${JSONDEP}, libcurl4, conntrack"
BUILDPACKAGE_EXTRA=

NTOPCLOUD_LIB="${HOME}/ntopcloud/libcloud.a"
if test -d "${NTOPCLOUD_LIB}"; then
  EXTRA_DEP="${EXTRA_DEP}, libsodium23"
fi

AC_CHECK_LIB([zmq], [zmq_socket_monitor])
if test "x$ac_cv_lib_zmq_zmq_socket_monitor" = xyes; then :
   EXTRA_DEP="$EXTRA_DEP, libzmq5"
fi

if test $MACHINE = "x86_64"; then
   EXTN="amd64"
else
  if test $SHORT_MACHINE = "aar"; then
     EXTN="arm64"
     EXTRA_DEPS=""
  else
    if test $SHORT_MACHINE = "arm"; then
       EXTN="armhf"
       EXTRA_DEPS=""
    else
       if test $SHORT_MACHINE = "mip"; then
         EXTN="mips"
         EXTRA_DEPS=""
       else	
         EXTN="i386"
       fi
     fi
  fi
fi

if test -f /usr/bin/debsigs; then
  SIGN_CMD="debsigs"
else
  SIGN_CMD="dpkg-sig"
fi

APP=ipt-geofence
DATE=`date -R`

AC_SUBST(APP)
AC_SUBST(BUILDPACKAGE_EXTRA)
AC_SUBST(MACHINE)
AC_SUBST(IPT_GEOFENCE_VERSION_SHORT)
AC_SUBST(EXTN)
AC_SUBST(DATE)
AC_SUBST(EXTRA_DEP)
AC_SUBST(GIT_COMMITS)
AC_SUBST(SIGN_CMD)

AC_CONFIG_FILES(debian/changelog)
AC_CONFIG_FILES(debian/files)
AC_CONFIG_FILES(debian/control)
AC_CONFIG_FILES(debian/rules)
AC_CONFIG_FILES(../etc/systemd/system/ipt_geofence.service)
AC_CONFIG_FILES(Makefile)
AC_OUTPUT
